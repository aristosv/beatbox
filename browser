function start_audio {

# loading variables
remoteaudiomedia="/media/audio/"
localaudiomedia="/home/pi/media/audio"
ftpuser="signage@bbxmd.com"
ftphost="signage-ftp.bbxmd.com"
ftppass="221K09H2653M42g1!V8R0N51H_3if50JXyDGYO9IEI7SETX"
ftpsettings="set ftp:ssl-allow no ; set net:reconnect-interval-base 5 ; set net:max-retries 2"

# updating audio media
lftp ftp://$ftpuser:$ftppass@$ftphost -e "$ftpsettings ; mirror -v -e $remoteaudiomedia $localaudiomedia ; quit"

# removing old service file
[ -e /etc/systemd/system/audio.service ] && sudo rm /etc/systemd/system/audio.service

# creating new service file
echo '[Unit]' | sudo tee -a /etc/systemd/system/audio.service > /dev/null
echo 'Description=Digital Signage Audio' | sudo tee -a /etc/systemd/system/audio.service > /dev/null
echo 'After=network.target' | sudo tee -a /etc/systemd/system/audio.service > /dev/null

echo '[Service]' | sudo tee -a /etc/systemd/system/audio.service > /dev/null
echo 'ExecStart=/bin/bash -c "while true ; do for audio in $(ls /home/pi/media/audio/* | shuf); do omxplayer --no-keys --no-osd $audio; done; done"' | sudo tee -a /etc/systemd/system/audio.service > /dev/null
echo 'Restart=always' | sudo tee -a /etc/systemd/system/audio.service > /dev/null

echo '[Install]' | sudo tee -a /etc/systemd/system/audio.service > /dev/null
echo 'WantedBy=multi-user.target' | sudo tee -a /etc/systemd/system/audio.service > /dev/null

# reloading systemctl
sudo systemctl daemon-reload

# starting audio service
sudo systemctl start audio.service

# enabling audio service
sudo systemctl enable audio.service > /dev/null 2>&1

# clearing framebuffer
dd if=/dev/zero of=/dev/fb0 status=none > /dev/null 2>&1 &

# showing logo
fim -q /home/pi/media/logo/bbx.png > /dev/null 2>&1 &
}

function stop_audio {

# stopping audio service
sudo systemctl stop audio.service

# clearing framebuffer
dd if=/dev/zero of=/dev/fb0 status=none > /dev/null 2>&1 &

# showing logo
fim -q /home/pi/media/logo/bbx.png > /dev/null 2>&1 &

# disabling audio service
sudo systemctl disable audio.service > /dev/null 2>&1

# deleting audio service
[ -e /etc/systemd/system/audio.service ] && sudo rm /etc/systemd/system/audio.service    
}

if [ $(systemctl show -p SubState audio) = SubState=running ]
then
echo audio is running
echo restarting audio
 stop_audio
 start_audio
else
echo audio is not running
echo starting audio
 start_audio
fi
